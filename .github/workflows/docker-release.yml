name: Build and Release Docker Image

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      VS_TYPE: ${{ github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract VS_VERSION from tag
        id: get_version
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Sanitize branch name
        id: sanitize_branch
        run: |
          echo "branch=$(echo ${{ env.VS_TYPE }} | sed 's/[\/]/-/g')" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t vintagestory:${{ steps.get_version.outputs.version }}-${{ steps.sanitize_branch.outputs.branch }} -f Dockerfile .

      - name: Save Docker image as tar
        run: |
          docker save vintagestory:${{ steps.get_version.outputs.version }}-${{ steps.sanitize_branch.outputs.branch }} | gzip > vintagestory-${{ steps.get_version.outputs.version }}-${{ steps.sanitize_branch.outputs.branch }}.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: vintagestory-${{ steps.get_version.outputs.version }}-${{ steps.sanitize_branch.outputs.branch }}.tar.gz
          name: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
