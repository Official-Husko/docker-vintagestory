name: Build and Release Docker Image

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      RAW_BRANCH: ${{ github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract vs_type and vs_version from Dockerfile
        id: extract_args
        run: |
          vs_type=$(grep -E '^ARG vs_type=' Dockerfile | head -n1 | cut -d'=' -f2)
          vs_version=$(grep -E '^ARG vs_version=' Dockerfile | head -n1 | cut -d'=' -f2)
          echo "vs_type=$vs_type" >> $GITHUB_OUTPUT
          echo "vs_version=$vs_version" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build --build-arg vs_type=${{ steps.extract_args.outputs.vs_type }} --build-arg vs_version=${{ steps.extract_args.outputs.vs_version }} -t vintagestory:${{ steps.extract_args.outputs.vs_version }}-${{ steps.extract_args.outputs.vs_type }} -f Dockerfile .

      - name: Save Docker image as tar
        run: |
          docker save vintagestory:${{ steps.extract_args.outputs.vs_version }}-${{ steps.extract_args.outputs.vs_type }} | gzip > vintagestory-${{ steps.extract_args.outputs.vs_version }}-${{ steps.extract_args.outputs.vs_type }}.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: vintagestory-${{ steps.extract_args.outputs.vs_version }}-${{ steps.extract_args.outputs.vs_type }}.tar.gz
          name: ${{ steps.extract_args.outputs.vs_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
